POST users

  Creates a new user and returns it.
  Response format: JSON.

  Parameters:
    json:
      name    The name of the new user.

  Example request:
    POST http://example.com/users
    content-type: application/json
    { "name" : "Juan Perez" }

  Example result:
    {
      "id" : 0,
      "name" : "Juan Perez"
    }



GET users

  Returns a collection of users.
  Response format: JSON.
  
  Parameters:
    none

  Example request:
    GET http://example.com/users

  Example result:
    [
      {
        "id" : 0,
        "name" : "Juan Perez"
      },
      {
        "id" : 1,
        "name" : "Emilio Fernandez"
      }
    ]



GET users/{id}

  Returns data for the user with the given id.
  Response format: JSON.

  Parameters:
    id        The id of the user for which to return results for.

  Example request:
    GET http://example.com/users/0

  Example result:
    {
      "id" : 0,
      "name" : "Juan Perez"
    }



PUT users

  Updates the info of a user and returns the user.
  Response format: JSON.

  Parameters:
    json:
      id      The id of the user.
      name    The name of the new user.

  Example request:
    PUT http://example.com/users
    content-type: application/json
    { "id" : 0, "name" : "Juan Pedro" }

  Example result:
    {
      "id" : 0,
      "name" : "Juan Pedro"
    }



DELETE users/{id}

  Removes a user and return the updated list of users.
  Response format: JSON.

  Parameters:
    id        The id of the user.

  Example request:
    DELETE http://example.com/users/0

  Example result:
    [
      {
        "id" : 1,
        "name" : "Emilio Fernandez"
      },
      {
        "id" : 2,
        "name" : "Antonella Ordo√±ez"
      }
    ]



POST photos/{userID}
  
  Uploads a photo. The user with ID userID is the owner. Returns info about the photo.
  Response format: JSON.

  Parameters:
    userID      The id of the user.
    name        The name of the photo.
    file        The photo file.

  Example request:
    POST http://example.com/photos/0
    name = "myPhoto"
    file = myFile

  Example result:
    {
      "name" : "myPhoto",
      "file" : "/tmp/myFile",
      "id" : 0,
      "user" : {
        "id" : 0,
        "name": "Juan Perez"
      }
    }



GET photos/{userID}
  
  Returns a collection of photos from the given user.
  Response format: JSON.

  Parameters:
    userID      The id of the user.

  Example request:
    GET http://example.com/photos/0

  Example result:
    [
      {
        "name" : "myPhoto",
        "file" : "/tmp/myFile",
        "id" : 0,
        "user" : {
          "id" : 0,
          "name": "Juan Perez"
        }
      },
      {
        "name" : "anotherPhoto",
        "file" : "/tmp/myOtherFile",
        "id" : 1,
        "user" : {
          "id" : 0,
          "name": "Juan Perez"
        }
      }
    ]



GET photos/{userID}/{photoID}
  
  Returns the photo with id photoID from user with id userID.
  Response format: JSON.

  Parameters:
    userID       The id of the user.
    photoID      The id of the user.

  Example request:
    GET http://example.com/photos/0/1

  Example result:
    {
      "name" : "anotherPhoto",
      "file" : "/tmp/myOtherFile",
      "id" : 1,
      "user" : {
        "id" : 0,
        "name": "Juan Perez"
      }
    }